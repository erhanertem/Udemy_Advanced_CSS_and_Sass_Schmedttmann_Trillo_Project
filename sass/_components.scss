// write up CSS for all small components here
// SECTION: HEADER BLOCK
// SUBSECTION: LOGO
.logo {
	height: 3.25rem;
	margin-left: 2rem;
}

// SUBSECTION: SEARCH BAR
.search {
	// occupy only 40% of the available space
	flex: 0 0 40%;

	// we make search form a flex container as well
	display: flex;
	align-items: center;
	justify-content: center;

	&__input {
		//input element do not inherit automatically. Inherit needs to be utilized here
		font-family: inherit;
		font-size: inherit; //1.4rem
		//inherits from the nearest parent elements font-size. In this case, we have .header designated with 1.4rem font size otherwise it would go all the way up to inherit 1rem font size from the html element
		font-weight: inherit;
		color: inherit;
		border: none;
		background-color: var(--color-grey-light-2);
		padding: 0.7rem 2rem;
		border-radius: 100rem;
		width: 90%;

		// dargs the search button inside the search input field
		margin-right: -3.25rem;

		// smooth transition animation
		transition: all 0.2s;

		// when the search box is on focus
		&:focus {
			outline: none;
			width: 100%;
			background-color: var(--color-grey-light-3);
		}

		&::placeholder {
			font-weight: 100;
			color: var(--color-grey-light-4);
		}
	}

	// when search box clicked it gets darker except the search button. In order to darken the search button as well, we  use sibling selector such as + (the first near sibling selector) or ~ (more generic distant sibling selector)
	&__input:focus ~ &__button {
		background-color: var(--color-grey-light-3);
	}

	&__button {
		border: none;
		background-color: var(--color-grey-light-2);

		&:focus {
			outline: none;
		}
		&:active {
			transform: translate(2px);
		}
	}

	&__icon {
		height: 2rem;
		width: 2rem;
		fill: var(--color-grey-dark-3);
	}
}

// SUBSECTION: USER NAVIGATION
.user-nav {
	// turn navigation container to a flex container
	display: flex;
	align-items: center;
	align-self: stretch; // we make nav container stretch its sub containers 100%

	// direct children selector all
	& > * {
		padding: 0 2rem;
		cursor: pointer;
		height: 100%;

		display: flex;
		align-items: center;

		&:hover {
			background-color: var(--color-grey-light-2);
		}
	}

	&__icon-box {
		position: relative;
	}

	&__icon {
		height: 2.25rem;
		width: 2.25rem;
		fill: var(--color-grey-dark-2);
	}

	&__notification {
		font-size: 0.8rem;
		height: 1.75rem;
		width: 1.75rem;
		border-radius: 100rem;
		background-color: var(--color-primary);
		color: #fff;

		position: absolute;
		top: 1.5rem;
		right: 1.2rem;

		display: flex;
		justify-content: center;
		align-items: center;
	}

	&__user {
	}

	&__user-photo {
		height: 3.75rem;
		width: 3.75rem;
		border-radius: 50%;
		margin-right: 1rem;
	}
}

// SECTION: CONTENT BLOCK
// SUBSECTION: CONTENT NAVIGATION

.sidebar {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}

.side-nav {
	font-size: 1.4rem;
	list-style: none;
	margin-top: 3.5rem;

	&__item {
		position: relative;

		&:not(:last-child) {
			margin-bottom: 0.5rem;
		}
	}

	&__item::before {
		content: ""; //pseudo elments needs to have this content property to show up
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 3px;
		background-color: var(--color-primary);
		transform: scaleY(0);

		transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
			background-color 0.1s;
		// transform @ hover state has a .2s transition duration for animation
		// width @hover state has a .2s transition duration for animation just after completion of previous animation + .4s delay
	}

	&__item:hover::before,
	&__item--acive::before {
		transform: scaleY(1);
		width: 100%;
	}

	&__item:active::before {
		background-color: var(--color-primary-light);
	}

	&__link {
		// aligns svg and span elements
		display: flex;
		align-items: center;

		// IMPORTANT: z-index only works in combination with position property
		position: relative;
		z-index: 10;

		&:link,
		&:visited {
			color: var(--color-grey-light-1);
			text-decoration: none;
			text-transform: uppercase;
			// display: block; //for padding to work, display:block needs to be set for inline elements
			// already applied display:flex above - dismissable
			padding: 1.5rem 3rem;
		}
	}
	&__icon {
		width: 1.75rem;
		height: 1.75rem;
		fill: currentColor; // currentColor takes parents color --> color: var(--color-grey-light-1);
		margin-right: 2rem;
	}
}

.legal {
	font-size: 1.2rem;
	color: var(--color-grey-light-4);
	text-align: center;
	padding: 2.5rem;
}

// SUBSECTION: CONTENT HOTEL-VIEW

// TOP IMG BLOCK
.gallery {
	display: flex;

	&__photo {
		width: 100%; //cover as much as the flexed &__item containers
		display: block; //img elements should always have display:block applied to avoid little spoaces left around them
	}
}

// DESCRIPTION BLOCK

.overview {
	display: flex;
	align-items: center;

	border-bottom: var(--borderline);

	&__heading {
		font-size: 2.5rem;
		font-weight: 400;
		text-transform: uppercase;
		letter-spacing: 1px;
		padding: 1.5rem 3rem;
	}
	&__stars {
		// flex: 1; //graps the entire available space compared to others
		margin-right: auto; // IMPORTANT: better than flex as the element is not covering the entire space to rip some space

		display: flex;
	}

	&__icon-star,
	&__icon-location {
		height: 1.75rem;
		width: 1.75rem;
		fill: var(--color-primary);
	}

	&__location {
		font-size: 1.2rem;

		display: flex;
		align-items: center;
	}

	&__icon-location {
		margin-right: 0.5rem;
	}

	&__rating {
		background-color: var(--color-primary);
		color: #fff;
		margin-left: 3rem;
		padding: 0 2.25rem;
		text-align: center;

		align-self: stretch; //strecthes the comntainer to parent flex element

		// centerline the ratings info
		display: flex;
		flex-direction: column;
		justify-content: center;

		&-average {
			font-size: 2.25rem;
			font-weight: 300;
		}

		&-count {
			font-size: 0.8rem;
			text-transform: uppercase;
		}
	}
}

.btn-inline {
	border: none;
	color: var(--color-primary);
	font-size: inherit;
	border-bottom: 1px solid currentColor;
	padding-bottom: 2px;
	background-color: transparent;
	cursor: pointer;
	transition: all 0.2s;

	display: inline-block;

	& span {
		// right wing review section btn element initial state
		margin-left: 0.3rem;

		transition: margin-left 0.2s;
	}

	&:hover {
		color: var(--color-grey-dark-1);

		&:hover span {
			// right wing review section btn element hover on state
			margin-left: 0.8rem;
		}
	}

	&:focus {
		outline: none;
		animation: pulsate 1s infinite;
	}
}

@keyframes pulsate {
	0% {
		transform: scale(1);
		box-shadow: none;
	}
	50% {
		transform: scale(1.05);
		box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
	}
	100% {
		transform: scale(1);
		box-shadow: none;
	}
}

// DESCRIPTION SECTION 2ND BLOCK LEFT WING paragraph
.paragraph:not(:last-of-type) {
	margin-bottom: 2rem; // paragraph is assigned to p. except the last <p> child in a  multi <p> setup ...
}

// DESCRIPTION SECTION 2ND BLOCK LEFT WING list
.list {
	list-style: none;
	margin: 3rem 0;
	padding: 3rem;
	border-top: var(--borderline);
	border-bottom: var(--borderline);

	display: flex;
	flex-wrap: wrap;

	&__item {
		width: 50%;
		margin-bottom: 0.7rem;

		// IMPORTANT: either include via HTML which clutters the code ot include directly in CSS here.
		&::before {
			content: ""; //always include @ before/after pseudo elements
			display: inline-block; //turn inline element into a block element

			height: 1rem;
			width: 1rem;
			margin-right: 0.7rem;

			// //for older browsers icon loading
			// background-image: url(../img/chevron-thin-right.svg);
			// background-size: cover;

			// //newer browsers icon loading
			background-color: var(--color-primary);
			-webkit-mask-image: url(../img/chevron-thin-right.svg);
			mask-image: url(../img/chevron-thin-right.svg);
			-webkit-mask-size: cover;
			mask-size: cover; //allows for lower heights
		}
	}
}

// DESCRIPTION SECTION 2ND BLOCK LEFT WING recommend
.recommend {
	font-size: 1.3rem;
	color: var(--color-grey-dark-3);

	display: flex;
	align-items: center;
	// justify-content: space-between;
	// // either this or __count margin-right: auto trick!

	&__count {
		margin-right: auto;
	}

	&__photo {
		height: 4.3rem;
		width: 4.3rem;
		border-radius: 50%;
		border: 0.3rem solid var(--color-white);

		&:not(:last-child) {
			margin-right: -1.5rem;
		}
	}
}

// DESCRIPTION SECTION RIGHT WING REVIEWS SECTION

.review {
	background-color: var(--color-white);
	box-shadow: var(--shadow-light);
	padding: 3rem;
	margin-bottom: 3.5rem; //spacing between reviews
	position: relative; //position attribute tht parents ::before pseudo elemnent of "
	overflow: hidden; //crops off the boundary the overflowing " pseudo element

	&::before {
		content: "\201C"; //css glyph code
		font-family: sans-serif; //assign custom font to get the right glyph appearance
		font-size: 20rem;
		line-height: 1;
		color: var(--color-grey-light-2);

		position: absolute;
		top: -2.75rem;
		left: -1rem;

		z-index: 1;
	}

	&__text {
		margin-bottom: 2rem;

		position: relative; //position attribute needs to be included for z-index to work
		z-index: 2;
	}

	&__user {
		display: flex;
		align-items: center;
	}

	&__photo {
		height: 4.5rem;
		width: 4.5rem;
		border-radius: 50%;
	}

	&__user-box {
		margin-left: 1.5rem;
		margin-right: auto; // nudge the rating to right as much as possible
	}

	&__user-name {
		text-transform: uppercase;
		font-size: 1.1rem;
		font-weight: 600;
		margin-bottom: 0.4rem;
	}

	&__user-date {
		font-size: 1rem;
		color: var(--color-grey-dark-3);
	}

	&__rating {
		font-size: 2.2rem;
		font-weight: 300;
		color: var(--color-primary);
	}
}

// CTA SECTION

.cta {
	padding: 3.5rem 0;
	text-align: center;

	&__book-now {
		font-size: 1.5rem;
		font-weight: 300;
		text-transform: uppercase;
		margin-bottom: 2.5rem;
	}
}

.btn {
	font-size: 1.5rem;
	font-weight: 300;
	text-transform: uppercase;
	border-radius: 100rem;
	border: none;
	color: var(--color-white);
	background-image: linear-gradient(
		to right,
		var(--color-primary-light),
		var(--color-primary-dark)
	);
	cursor: pointer;

	position: relative;
	overflow: hidden; //crops the text overflowing the button

	& > * {
		display: inline-block;
		height: 100%;
		width: 100%;
		transition: all 0.2s;
	}

	&__visible {
		padding: 2rem 7.5rem;
	}

	// Animation story: basically, the invisible text is placed off the button boundary and via animation it will slide on top of the visible text. We used absolute positioning for that and applied overflow hidden to the parent element to make it invisible to the user till the animation shows itself on the button.
	&__hidden {
		padding: 2rem 0;

		//initial state of the hidden button text
		position: absolute;
		left: 0;
		top: -100%;
	}

	&:hover {
		background-image: linear-gradient(
			to left,
			var(--color-primary-light),
			var(--color-primary-dark)
		);
		& .btn__visible {
			transform: translateY(100%);
		}
		& .btn__hidden {
			top: 0;
		}
	}

	&:focus {
		outline: none;
		animation: pulsate 1s infinite;
	}
}
